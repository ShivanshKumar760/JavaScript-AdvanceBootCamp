JavaScript addEventListener()
The addEventListener() method is used to attach an event handler to a particular element. 
It does not override the existing event handlers. 
Events are said to be an essential part of the JavaScript. 
A web page responds according to the event that occurred. 
Events can be user-generated or generated by API's.
 An event listener is a JavaScript's procedure that waits for the occurrence of an event.

The addEventListener() method is an inbuilt function of JavaScript.
 We can add multiple event handlers to a particular element without 
 overwriting the existing event handlers.

Syntax
element.addEventListener(event, function, useCapture);  
Although it has three parameters, the parameters event and function are widely used. 
The third parameter is optional to define. The values of this function are defined as follows.


what are event actually? well suppose we are playing a game or we are surfing through
a website when we click a button or mouse or hit a key a functionality takes place in the 
enviorment of game and website and that is called as a event





---------------------------------------------------------------------------------------------
Parameter Values
event: It is a required parameter. 
It can be defined as a string that specifies the event's name.

Note: Do not use any prefix such as "on" with the parameter value. 
For example, Use "click" instead of using "onclick".
function: It is also a required parameter. 
It is a JavaScript function which responds to the event occur.

useCapture: It is an optional parameter. 
It is a Boolean type value that specifies whether the event is 
executed in the bubbling or capturing phase. 
Its possible values are true and false. When it is set to true, 
the event handler executes in the capturing phase. When it is set to false, 
the handler executes in the bubbling phase. Its default value is false.

Let's see some of the illustrations of using the addEventListener() method.

Example
It is a simple example of using the addEventListener() method. 
We have to click the given HTML button to see the effect.

<!DOCTYPE html>  
<html>  
<body>  
<p> Example of the addEventListener() method. </p>  
<p> Click the following button to see the effect. </p>  
<button id = "btn"> Click me </button>  
<p id = "para"></p>  
<script>  
document.getElementById("btn").addEventListener("click", fun);  
function fun() {  
document.getElementById("para").innerHTML = "Hello World" + "<br>" + "Welcome to the  javaTpoint.com";  
}  
</script>  
</body>  
</html> 

Example of the addEventListener() method. 
Click the following button to see the effect
[Click me]//when clicked it will add a paragraph saying

Hello World
Welcome to the  javaTpoint.com


---------------------------------------------------------------------------------------------------------

Now, in the next example we will see how to add many events to the same element without overwriting the existing events.

Example
In this example, we are adding multiple events to the same element.

<!DOCTYPE html>  
<html>  
<body>  
<p> This is an example of adding multiple events to the same element. </p>  
<p> Click the following button to see the effect. </p>  
<button id = "btn"> Click me </button>  
<p id = "para"></p>  
<p id = "para1"></p>  
<script>  
function fun() {  
    alert("Welcome to the javaTpoint.com");  
}  
   
function fun1() {  
   document.getElementById("para").innerHTML =  "This is second function";  
  
}  
function fun2() {  
   document.getElementById("para1").innerHTML =  "This is third function";  
}  
var mybtn = document.getElementById("btn");  
mybtn.addEventListener("click", fun);  
mybtn.addEventListener("click", fun1);  
mybtn.addEventListener("click", fun2);  
</script>  
</body>  
</html>  


Test it Now
------------------------------------------------------------------------------------------------


Example
In this example, we are adding multiple events of a different type to the same element.

<!DOCTYPE html>  
<html>  
<body>  
<p> This is an example of adding multiple events of different type to the same element. </p>  
<p> Click the following button to see the effect. </p>  
<button id = "btn"> Click me </button>  
<p id = "para"></p>  
<script>  
function fun() {  
    btn.style.width = "50px";  
    btn.style.height = "50px";  
    btn.style.background = "yellow";  
    btn.style.color = "blue";  
}  
   
function fun1() {  
   document.getElementById("para").innerHTML =  "This is second function";  
  
}  
function fun2() {  
    btn.style.width = "";  
    btn.style.height = "";  
    btn.style.background = "";  
    btn.style.color = "";  
}  
var mybtn = document.getElementById("btn");  
mybtn.addEventListener("mouseover", fun);  
mybtn.addEventListener("click", fun1);  
mybtn.addEventListener("mouseout", fun2);  
</script>  
</body>  
</html>  